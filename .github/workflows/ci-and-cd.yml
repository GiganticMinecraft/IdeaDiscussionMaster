name: CI and CD
on:
  push:
    branches:
      - main
    paths-ignore:
      - ".env.example"
      - "LICENSE"
      - "README.md"
      - "renovate.json"
      - ".github/workflows/**"
      - "!.github/workflows/ci-and-cd.yml"
  pull_request:
    branches:
      - main

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
      - name: Cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
      - name: Cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features

  build-image:
    name: Build Docker image, and Publish on main branch
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/idea-discussion-master
          tags: |
            type=sha,prefix=sha-,suffix=,format=short
            type=schedule,pattern={{date 'YYYYMMDD'}}
            type=raw,value=latest
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
