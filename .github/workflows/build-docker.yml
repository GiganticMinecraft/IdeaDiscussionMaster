name: Build and Deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - "renovate.json"
      - ".env.example"
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CARGO_INCREMENTAL: 0
    steps:
      - uses: actions/checkout@v2
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1
      - name: Build binary
        run: cargo build --release
      - uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: ./target/release/idea-discussion-master

  lint:
    runs-on: ubuntu-latest
    env:
      CARGO_INCREMENTAL: 0
    steps:
      - uses: actions/checkout@v2
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1
      - name: Run Clippy
        uses: actions-rs/clippy-check@v1.0.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
      - name: Run formatter
        run: cargo fmt --all -- --check

  test:
    runs-on: ubuntu-latest
    env:
      CARGO_INCREMENTAL: 0
    steps:
      - uses: actions/checkout@v2
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1
      - name: Run tests
        run: cargo test --release

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build_and_push_image
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Make .env
  #       run: |
  #         cd attachments
  #         echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" > .env
  #         echo "REDMINE_KEY=${{ secrets.REDMINE_KEY }}" >> .env
  #         echo "EXECUTABLE_ROLE_ID=${{ secrets.BOT_ROLE_ID }}" >> .env
  #         cd ../
  #     - name: Install SSH Key
  #       run: |
  #         mkdir -p ~/.ssh
  #         chmod 700 ~/.ssh
  #         echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
  #         chmod 600 ~/.ssh/id_rsa

  #     - name: Rsync .env, docker-compose.yml, and restart bash
  #       run: rsync -auvz --delete -e "ssh -p ${{ secrets.SERVER_SSH_PORT }} -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" ./attachments/ ${{ secrets.SERVER_SSH_USER }}@${{ secrets.SERVER_SSH_ADDRESS }}:${{ secrets.SERVER_SSH_PATH }}

  #     - name: Restart docker
  #       run: ssh -p ${{ secrets.SERVER_SSH_PORT }} -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SERVER_SSH_USER }}@${{ secrets.SERVER_SSH_ADDRESS }} "cd ${{ secrets.SERVER_SSH_PATH }};chmod +x restart-docker.sh;./restart-docker.sh"
